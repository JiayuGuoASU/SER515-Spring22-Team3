<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from Anton.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="Anton">
  <link name="base_footprint">
    <inertial>
      <mass value="20"/>
      <inertia ixx="3.3333333333333333e-06" ixy="0.0" ixz="0.0" iyy="3.3333333333333333e-06" iyz="0.0" izz="3.3333333333333333e-06"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <link name="base_link">
    <inertial>
      <mass value="10"/>
      <inertia ixx="0.021416666666666667" ixy="0.0" ixz="0.0" iyy="0.04266666666666667" iyz="0.0" izz="0.021416666666666667"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.16 0.16 0.01"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.16 0.16 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.04"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="caster_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.0175"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.0175"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="5"/>
      <inertia ixx="0.0006125000000000001" ixy="0.0" ixz="0.0" iyy="0.0006125000000000001" iyz="0.0" izz="0.0006125000000000001"/>
    </inertial>
  </link>
  <joint name="caster_wheel_joint" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin rpy="0 0 0" xyz="-0.052 0 -0.022500000000000003"/>
  </joint>
  <link name="sensor_laser">
    <visual>
      <geometry>
        <box size="0.03 0.03 0.04"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.03 0.03 0.04"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="4.1666666666666665e-05" ixy="0.0" ixz="0.0" iyy="2.9999999999999997e-05" iyz="0.0" izz="4.1666666666666665e-05"/>
    </inertial>
  </link>
  <joint name="sensor_laser_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.065 0 0.035"/>
    <parent link="base_link"/>
    <child link="sensor_laser"/>
  </joint>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.03 0.03 0.04"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.03 0.03 0.04"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="4.1666666666666665e-05" ixy="0.0" ixz="0.0" iyy="2.9999999999999997e-05" iyz="0.0" izz="4.1666666666666665e-05"/>
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.165 0 -0.035"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <!-- Define color for robot parts -->
  <gazebo reference="base_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="left_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>false</alwaysOn>
      <legacyMode>false</legacyMode>
      <updateRate>20</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation> 0.15 
      </wheelSeparation>
      <wheelDiameter>0.07
      </wheelDiameter>
      <torque>20</torque>
      <commandTopic>
        /ai_rover_remastered/base_controller/cmd_vel
      </commandTopic>
      <odometryTopic> 
        /ai_rover_remastered/base_controller/odom
      </odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>
  <!--Gazebo Hokuyo Laser Plugin-->
  <gazebo reference="sensor_laser">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1440</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/ai_rover_remastered/laser_scan/scan
  </topicName>
        <frameName>sensor_laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera_link">
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <!--  
        <horizontal_fov>1.3962634</
         horizontal_fov> -->
        <horizontal_fov>1.57</horizontal_fov>
        <!-- ~90 degrees -->
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per               
          pixel on each frame. Adding pixel's noise 
          value to each color  
          channels, which at that point lie in the    
          range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>ai_rover_remastered/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_imu.so" name="imu_plugin">
      <alwaysOn>true</alwaysOn>
      <bodyName>IMU_link</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo>
</robot>
